// Athena Character configuration file.
//
// Traduzido por: (Guru)
//
// Observação: "Comentários" são todos texto no lado direito de uma barra dupla "//"
// Qualquer texto comentado não será analisado pelos servidores e serve
// apenas como informação/referência.

// Nome de usuário e senha de comunicação do servidor.
userid: s1
passwd: p1

// Nome do servidor, use um caractere alternativo como ASCII 160 para espaços.
// NOTA: Não use espaços ou qualquer um desses caracteres que não são permitidos em
// Nomes de arquivos do Windows \ /: *? "<> |
// 	... ou então os emblemas da guilda não funcionarão no lado do cliente!
server_name: rAthenaBR

// Nome do Wisp para o servidor: usado para enviar o wisp do servidor para os jogadores (entre 4 a 23 caracteres)
wisp_server_name: Server

// Login Server IP
// O servidor de personagem se conecta ao servidor de login usando este endereço IP.
// NOTA: Isso é útil quando você está executando atrás de um firewall ou está
// uma máquina com várias interfaces.
//login_ip: 127.0.0.1

// O servidor de personagem escuta na interface com este endereço IP.
// NOTA: Isso permite que você execute vários servidores em várias interfaces
// enquanto usa as mesmas portas para cada servidor.
//bind_ip: 127.0.0.1

// Porta do servidor de login
login_port: 6900

// Character Server IP
// O endereço IP que os clientes usarão para se conectar.
// Defina isso para o endereço IP público do seu servidor.
//char_ip: 127.0.0.1

// Porta do servidor de caracteres
char_port: 6121

// Formato do carimbo de data/hora que será impresso antes de todas as mensagens.
// Pode ter no máximo 20 caracteres.
// Formatos comuns:
// %I:%M:%S%p (hora: minuto: segundo 12 horas, formato AM/PM)
// %H:%M:%S (hora: minuto: segundo, formato de 24 horas)
// %d/%b/%Y (dia/mês/ano)
// Para obter informações completas sobre o formato, consulte o manual strftime ().
// timestamp_format: [%d/%b%H:%M]

// Se a saída redirecionada contém sequências de escape (códigos de cores)
stdout_with_ansisequence: no

// Faz com que o servidor registre os tipos de mensagem selecionados para um arquivo na pasta/log/
// 1: Registrar mensagens de aviso
// 2: Log Error e SQL Error messages.
// 4: Registrar mensagens de depuração
// Exemplo: "console_msg_log: 7" registra todos os 3 tipos
// Mensagens registradas por este substitui a configuração console_silent
console_msg_log: 0

// Caminho do arquivo para armazenar as mensagens do console acima
console_log_filepath: ./log/char-msg_log.log

// Torna a saída do servidor mais silenciosa, omitindo certos tipos de mensagens:
// 1: Ocultar mensagens de informação
// 2: Ocultar mensagens de status
// 4: Ocultar mensagens de aviso
// 8: Ocultar mensagens de aviso
// 16: Ocultar mensagens de erro e de erro SQL.
// 32: Ocultar mensagens de depuração
// Exemplo: "console_silent: 7" Oculta informações, status e mensagens de aviso (1 + 2 + 4)
console_silent: 0

// Comandos do console
// Permitir que os comandos do console sejam usados ​​on/off
// Isso evita o uso de> & log.file
console: off

// Tipo de servidor.
// Sem efeitos colaterais funcionais no momento.
// Exibido próximo ao nome do servidor no cliente.
// 0 = normal, 1 = manutenção, 2 = mais de 18 anos, 3 = pagando, 4 = P2P
char_maintenance: 0

// Habilita ou desabilita a criação de novos personagens.
// Agora é realmente compatível [Kevin]
char_new: yes

// Exibir (Novo) na lista de servidores.
char_new_display: 0

// Máximo de usuários capazes de se conectar ao servidor.
// Defina como 0 para desativar o login dos usuários. (-1 significa ilimitado)
max_connect_user: -1

// ID do grupo que pode ignorar o limite de usuários do servidor.
// Ou para conectar quando o char está em modo de manutenção (groupid> = permitir)
// Padrão: -1 = ninguém (não há grupos com ID <0)
// Veja: conf/groups.conf
gm_allow_group: 99

// Com que freqüência o servidor deve salvar as informações da guilda? (Em segundos)
// (o intervalo de salvamento de caracteres é definido na configuração do mapa (autosave_time))
autosave_time: 60

// Exibir informações no console sempre que personagens/guildas/grupos/animais de estimação são carregados/salvos?
save_log: yes

// Ponto de partida para novos personagens
// Formato: <nome do mapa>, <x>, <y> {: <nome do mapa>, <x>, <y> ...}
// O número máximo de pontos de início é MAX_STARTPOINT em char.hpp (padrão 5)
// A localização é escolhida aleatoriamente na criação do personagem.
// NOTA: Para Doram, isso requer o cliente 20151001 ou mais recente.
start_point: iz_int,18,26:iz_int01,18,26:iz_int02,18,26:iz_int03,18,26:iz_int04,18,26
start_point_pre: new_1-1,53,111:new_2-1,53,111:new_3-1,53,111:new_4-1,53,111:new_5-1,53,111
start_point_doram: lasa_fild01,48,297

// Itens iniciais para novos personagens
// O número máximo de itens é MAX_STARTITEM em char.cpp (padrão 32)
// Formato: <id>, <quantidade>, <posição> {: <id>, <quantidade>, <posição> ...}
// Para equipar um item automaticamente, inclua a posição onde ele será equipado; caso contrário, use zero.
// NOTA: Para Doram, isso requer o cliente 20151001 ou mais recente.
start_items: 1201,1,2:2301,1,16
start_items_doram: 1681,1,2:2301,1,16

// Zeny para novos personagens
start_zeny: 0

// Tamanho para as listas de fama
fame_list_alchemist: 10
fame_list_blacksmith: 10
fame_list_taekwon: 10

// Modificador de exp ganho pela guilda.
// Ajusta a exp tributada antes de adicioná-la à exp da guilda. Por exemplo, se definido
// para 200, a guilda recebe o dobro da exp tributada do jogador.
guild_exp_rate: 100

// Nome usado para caracteres desconhecidos
unknown_char_name: Unknown

// Para registrar o servidor de personagens?
log_char: yes

// Permitir ou não nomes idênticos para caracteres, mas com letras maiúsculas e minúsculas (maiúsculas/minúsculas):
// exemplo: Test-test-TEST-TesT; Valor: 0 não permitido (padrão), 1 permitido
name_ignoring_case: no

// Gerencia letras / símbolos possíveis no nome do personagem. Caracteres de controle (0x00-0x1f) nunca são aceitos. Os valores possíveis são:
// NOTA: Aplica-se a nomes de personagens, grupos e guildas.
// 0: sem restrição (padrão)
// 1: apenas letras / símbolos na opção 'char_name_letters'.
// 2: Letras / símbolos na opção 'char_name_letters' são proibidos. Todos os outros são possíveis.
char_name_option: 1

// Defina as letras / símbolos que deseja usar com a opção 'char_name_option'.
// Nota: Não adicione espaços a menos que você queira adicionar 'espaço' à lista.
char_name_letters: abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890

// Restringir a exclusão de caracteres por BaseLevel
// 0: sem restrição (os jogadores podem deletar personagens de qualquer nível)
// -X: você não pode deletar chars com BaseLevel <= X
// Y: você não pode deletar chars com BaseLevel> = Y
// por exemplo. char_del_level: 80 (os jogadores não podem deletar personagens com 80+ BaseLevel)
char_del_level: 0

// Quantidade de tempo em segundos em que a exclusão do caractere é atrasada.
// Padrão: 86400 (24 horas)
// NOTA: Requer o cliente 2010-08-03aragexeRE ou mais recente.
char_del_delay: 86400

// Restringir a exclusão de caracteres por endereço de e-mail ou data de nascimento.
// Isso restringe os jogadores de alterar o tipo de idioma e deletar caracteres.
// Padrões baseados na data do cliente.
// 1: endereço de e-mail
// 2: Data de Nascimento
// 3: endereço de e-mail ou data de nascimento
// IMPORTANTE!
// - Esta configuração só funciona para clientes que enviam 0x0068 ou 0x01fb para solicitação de exclusão.
// - Use langtype 1 para clientes mais novos (2013+), para usar 0x01fb.
// - Clientes que não estão usando 0x0068 ou 0x01fb, usam apenas a data de nascimento (AAMMDD) como padrão.
char_del_option: 2

// Restringir a exclusão do personagem enquanto ele ainda estiver em um grupo ou guilda
// 0: nenhuma restrição é aplicada
// 1: O personagem não pode ser excluído enquanto ele permanecer em um grupo
// 2: Personagem não pode ser excluído enquanto ele permanecer em uma guilda
// 3: O personagem não pode ser excluído enquanto permanecer em um grupo ou guilda (padrão)
char_del_restriction: 3

// Impedir que determinada classe seja criada. (Funcional apenas em 20151001aRagexe ou posterior)
// 0: Nenhuma criação de personagem é permitida
// 1: Apenas novatos podem ser criados (padrão de pré-renovação)
// 2: Apenas o invocador pode ser criado
// 3: Tanto o novato quanto o invocador podem ser criados (padrão de renovação)
// Remova o comentário para personalizar a restrição
//allowed_job_flag: 3

// Em que pasta estão os arquivos DB (item_db.txt, etc.)
db_path: db

//===================================
// Sistema Pincode
//===================================
// NOTA: Requer cliente 2011-03-09aragexeRE ou mais recente.
// Uma janela é aberta antes que você possa selecionar seu personagem e você terá que inserir um código PIN usando apenas o mouse.
// Padrão: yes
pincode_enabled: yes

// Com que frequência um usuário precisa alterar seu código PIN?
// 0: nunca (padrão)
// X: a cada X dias
pincode_changetime: 0

// Com que frequência um usuário pode inserir o código PIN errado?
// Padrão: 3 (cliente máximo)
pincode_maxtry: 3

// Os usuários são forçados a usar um código PIN quando o sistema está ativado?
// Padrão: yes
pincode_force: yes

// São permitidos números repetidos?
// Padrão: no
pincode_allow_repeated: no

// Os números sequenciais são permitidos?
// Padrão: no
pincode_allow_sequential: no

//===================================
// Sistema Addon
//===================================
// Personagem em movimento
// NOTA: Requer cliente 2011-09-28aragexeRE ou mais recente.
// Permite que os usuários movam seus personagens entre os slots.
// Padrão: yes
char_move_enabled: yes

// Permitir que os usuários movam um personagem para um slot usado?
// Se habilitado, os personagens são trocados.
// Padrão: yes
char_movetoused: yes

// Permitir que os usuários movam os personagens quantas vezes quiserem?
char_moves_unlimited: no

// Renomeação de personagem
// Permitir aos usuários renomear um personagem enquanto está em uma festa?
// Padrão: no
char_rename_party: no

// Permitir que os usuários renomeiem um personagem enquanto estão em uma guilda?
// Padrão: no
char_rename_guild: no

// Devemos verificar se as tabelas sql estão corretas na inicialização do servidor?
char_checkdb: yes

// Mapa padrão se o personagem estiver em um mapa não existente quando carregado.
default_map: prontera
default_map_x: 156
default_map_y: 191

// Depois de quantos dias os membros inativos do clã devem ser removidos de seu clã?
// 0: nunca os remova
// X: remove membros do clã se eles não se logaram por X dias
// Padrão: 14
clan_remove_inactive_days: 14

//===================================
// RODEX
// =========================================
// Depois de quantos dias os e-mails devem ser devolvidos ao remetente?
// 0: nunca os retorna
// X: devolvê-los após X dias
// Padrão: 15
mail_return_days: 15

// Quantos dias depois que um e-mail foi devolvido ao remetente, ele deve ser excluído completamente?
// 0: nunca os exclua
// X: exclua-os X dias após terem sido devolvidos
// Padrão: 15
mail_delete_days: 15

// O botão Recuperar tudo ignora o status de mensagens não lidas?
// no: retorna apenas anexos de e-mails lidos
// yes: Retorna anexos de todo o correio
// Padrão: yes
mail_retrieve: yes

import: conf/import/char_conf.txt
