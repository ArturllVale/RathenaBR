//--------------------------------------------------------------
// rAthenaBR - Configuração dos Campos de Batalha
// Traduzido originalmente por Guru
//--------------------------------------------------------------
// Observação 1: o valor é uma chave de configuração (on/off, yes/no ou 1/0)
// Nota 2: o valor está em porcentagens (100 significa 100%)
// Nota 3: O valor é um campo de bits. Se nenhuma descrição for fornecida,
// assume tipos de unidade (1: Pc, 2: Mob, 4: Animal de estimação, 8: Homun, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// Valor máximo que um mercador pode por de preço em uma mercadoria. (em zeny) (Nota 3)
vending_max_value: 1000000000

// Permitir a compra nas lojas dos personagens que estão no seu limite máximo de zeny.
// Se escolher sim, o resto dos zeny acima da capacidade do personagem irá desaparecer.
vending_over_max: yes

// Imposto a ser aplicado a todas as transações de venda (por exemplo: 10000 = 100%, 50 = 0,50%)
// Quando um imposto é aplicado, o preço total do item é cobrado do comprador, mas
// o vendedor não receberá todo o preço pago (recebe 100% - este imposto).
vending_tax: 500

// Total mínimo de compras até a aplicação de impostos.
// Oficialmente, não há imposto para nada menos que 100 milhões de zeny.
// 0 aplicará impostos a todas as transações.
vending_tax_min: 100000000

// Mostra o nome do comprador ao vender um item com sucesso
buyer_name: yes

// Taxa de sucesso de forjamento. (Nota 2)
weapon_produce_rate: 100

// Prepare a taxa de sucesso da Poção. (Nota 2)
potion_produce_rate: 100

// Os itens produzidos têm o nome do fabricante? (Nota 3)
// 0x01: Armas produzidas
// 0x02: Poções produzidas
// 0x04: Setas produzidas
// 0x08: Água benta produzida / Ancilla
// 0x10: Poções mortais produzidas
// 0x80: Outros itens produzidos.
produce_item_name_input: 0x03

// Um monstro invocado com "galho seco" é agressivo? (Nota 1)
dead_branch_active: yes

// Os monstros convocados devem verificar o nível de base do jogador? (galhos seco) (Nota 1)
// Isso não é para oficiais - monstros convocados de galhos seco/sangrentos podem ter QUALQUER nível.
// Mude para 'yes' para invocar apenas monstros menores ou iguais ao nível base do jogador.
random_monster_checklv: no

// Qualquer jogador pode equipar qualquer item, independentemente das restrições de gênero
// NOTA: Alianças e chicotes / instrumentos musicais verificarão o gênero, independentemente da configuração.
ignore_items_gender: yes

// Na alteração do mapa, ele verificará os itens não marcados como "disponíveis" e
// exclui-os automaticamente do inventário/carrinho/armazenamento.
// NOTA: Um item não está disponível se não foi carregado do item_db ou
// especificado como indisponível em db/item_avail.txt
// 0x1: Inventário
// 0x2: Carrinho
// 0x4: Armazenamento
item_check: 0x0

// Quanto tempo deve passar entre os usos do item?
// Afeta apenas o atraso entre o uso de itens, evita o abuso de itens de cura. Recomendado ~ 500 ms
// Em oficiais, é 0, mas está definido como 100 ms como uma medida contra bots / macros.
item_use_interval: 100

// Quanto tempo deve passar entre os usos de alimentos em dinheiro? Padrão: 60000 (1 min)
cashfood_use_interval: 60000

// Nível necessário de bNoMagicDamage antes que as mudanças de status sejam bloqueadas (cartão Golden Thief Bug).
// Por exemplo, se deixado em 50. Um item pode fornecer bNoMagicDamage, 40;
// o que reduz o dano mágico em 40%, mas não bloqueia as mudanças de status.
gtb_sc_immunity: 50

// Permitir que cartas com as mesmas funções tenham os resultados unidos?
// Nota: Cartas diferentes com a mesma função 
// sempre funcionaram independentemente de qualquer outra função.
autospell_stacking: no

// Permitir o consumo de itens utilizáveis ​​que são desabilitados por item_noequip.txt? (Nota 1)
// no = não pode ser consumido
// yes = consumido sem efeito
allow_consume_restricted_item: no

// Permitir equipar itens que são desabilitados por item_noequip.txt? (Nota 1)
// no = não pode ser equipado e será desequipado ao entrar no mapa
// yes = pode ser equipado, mas não produz efeito
// Se o equipamento for composto de cartas restritas, ele ignora este teste, mas ainda não dá efeito.
allow_equip_restricted_item: yes

// Permitir troca de equipamento enquanto interage com NPCs? (Nota 1)
// Padrão: yes
item_enabled_npc: yes

// Permitir que map_flooritem verifique se o item pode ser solto? (Nota 1)
// Se sim, os itens que não podem ser jogados serão destruídos em vez de aparecer no mapa quando o inventário do jogador estiver cheio.
// Padrão: yes
item_flooritem_check: yes

// Defina o tipo de limite padrão para item_flag & 8 (consulte db/[pre-] re/item_flag.txt
// 0 - Nenhum
// 1 - Conta
// 2 - Guild
// 3 - grupo
// 4 - Personagem
default_bind_on_equip: 4

// Permitir a venda de itens vinculados/restritos como moeda da Itemshop? (Nota 3)
// 0x0 = Bound/sell itens restritos não podem ser vendidos para Itemshops/Shops
// 0x1 = Itens vinculados podem ser vendidos para Itemshops
// 0x2 = Vender itens restritos podem ser vendidos para Itemshops
// 0x4 = Itens encadernados podem ser vendidos para lojas,
// porque a maioria dos itens de comércio restrito ainda podem ser vendidos para lojas
// 0x8 = Apenas o Líder da Guilda pode vender itens BOUND_GUILD para lojas ou oficinas de itens (se 0x1 ou 0x4 definido)
allow_bound_sell: 0x0

// Ativar chance de refinar de evento (consulte db/{pre-} re/refine_db.yml)
// no = chances normais de refinamento em vigor (valor oficial/padrão)
// yes = chances de refinamento de evento em vigor
event_refine_chance: no

// Esconda os n últimos caracteres do nome do jogador com asterisco (*) quando o jogador
// obteve um item com bandeira de transmissão especial.
// Nota: Jogadores com nomes curtos podem ser totalmente convertidos em asteriscos se este
// valor de configuração é definido alto.
broadcast_hide_name: 2

// Habilitar para vender item de aluguel para loja NPC? (Nota 1)
rental_transaction: yes

// Vender item de aluguel por 0 para a loja NPC, independentemente do valor do item em item_db? (Nota 1)
rental_item_novalue: no

// Preço mínimo de compra de itens em uma loja normal
// Oficialmente, os itens não podem ser comprados por menos de 1 Zeny
min_shop_buy: 1

// Preço mínimo de venda de itens em uma loja normal
// Oficialmente, os itens podem ser vendidos por 0 Zeny
min_shop_sell: 0
