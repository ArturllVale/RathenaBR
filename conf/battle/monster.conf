//--------------------------------------------------------------
// rAthenaBR - Configuração dos Campos de Batalha
// Traduzido originalmente por Guru
//--------------------------------------------------------------
// Observação 1: o valor é uma chave de configuração (on/off, yes/no ou 1/0)
// Nota 2: o valor está em porcentagens (100 significa 100%)
// Nota 3: O valor é um campo de bits. Se nenhuma descrição for fornecida,
// assume tipos de unidade (1: Pc, 2: Mob, 4: Animal de estimação, 8: Homun, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// A taxa de HP dos MVPs. (Nota 2)
mvp_hp_rate: 100

// A taxa de HP de monstros normais (ou seja, monstros que não são MVPs) (Nota 2)
monster_hp_rate: 100

// A velocidade máxima de ataque de um monstro
monster_max_aspd: 199

// Define várias configurações relacionadas à mob AI. (Nota 3)
// 0x001: Quando habilitados, os mobs atualizarão suas células-alvo a cada poucas iterações
// (normalmente eles nunca atualizam sua célula alvo até que a alcancem enquanto
// perseguindo)
// 0x002: Faz com que o mob use sua habilidade de "ataque rude" (geralmente se afastando) se eles
// são atacados e não podem atacar de volta, independentemente de como estavam
// atacado (por exemplo: GrimTooth), caso contrário, seu ataque rude "é apenas ativado
// se eles não podem atingir o alvo em combate corpo a corpo (por exemplo: sniping)
// 0x004: Se não for definido, os mobs que podem mudar de alvo só o fazem quando atacados dentro de um
// distância de [alcance de ataque + 1], caso contrário, os mobs podem mudar de alvo e perseguir
// atacantes à distância. Este sinalizador também substitui o alvo 'provocar'.
// 0x008: Quando definido, os mobs se espalham assim que perdem seu alvo. Use este modo
// para tornar muito mais difícil o treinamento da multidão, escondendo-os e coletando-os em um
// ponto único (ou seja: treinamento GrimTooth)
// 0x010: Se definido, as habilidades de mob definidas para amigos também serão ativadas em si mesmos.
// 0x020: Quando definido, o monstro ai é executado para todos os monstros em mapas que
// tem jogadores neles, em vez de apenas para mobs que estão nas proximidades
// de jogadores.
// 0x040: Quando definido, quando o alvo do mob muda de mapa, o mob caminha em direção
// qualquer npc-warps à vista (use com mob_warp abaixo)
// 0x080: Se não for definido, os mobs em estado de ataque só mudarão de alvo quando atacados
// por ataques normais. Defina isto se quiser que os mobs também mudem de alvo quando
// atingido por habilidades.
// 0x100: Quando definido, um mob escolherá uma habilidade aleatória de sua lista e começará
// isso em vez de verificar as habilidades em ordens (quando não definido, se um mob também
// muitas habilidades, as próximas ao final raramente serão selecionadas)
// 0x200: Quando definido, o atraso de reutilização de habilidade de um mob não será aplicado a todas as entradas de
// a mesma habilidade, em vez disso, apenas para aquela entrada em particular (por exemplo: Mob tem cura
// em seis linhas no mob_skill_db, apenas a entrada que é realmente usada
// receberá o atraso). Isso tornará os monstros mais difíceis, especialmente os MvPs.
// 0x400: Defina para fazer com que os mobs tenham um alcance de 9 para todas as habilidades. Caso contrário, eles
// obedecerá às regras normais de intervalo de habilidade.
// 0x800: Quando definido, os monstros que são provocados sempre mudarão de alvo para o
// provocando a pessoa, mesmo que ela normalmente não altere o alvo no ataque.
// Exemplo: 0x140 -> Perseguir jogadores através de warps + usar habilidades em ordem aleatória.
monster_ai: 0

// Com que frequência um monstro deve repensar sua perseguição?
// 0: a cada 100 ms (MIN_MOBTHINKTIME)
// 1: cada célula movida
// 2: a cada 2 células movidas
// 3: a cada 3 células movidas (oficial)
// x: cada x células movidas
// Independentemente desta configuração, um monstro sempre repensará sua perseguição se ele tiver
// atingiu seu alvo. Aumente este valor se você quiser que os monstros continuem
// movendo-se depois de perder o alvo (esconder, sem linha de visão, etc.).
monster_chase_refresh: 3

// Os mobs devem ser capazes de ser warped (adicione conforme necessário)?
// 0: Desativar.
// 1: Ativar mob-warps quando estiver em NPC-warps
// 2: Ativar mob-warp quando estiver em Portais Priest Warp
// 4: Desativa o warping quando o mapa de destino é um mapa 'nobranch'.
// 8: Habilitar mob-warping quando estiver na Porta Dimensional
mob_warp: 0

// Se forem configurados acima de 0, eles definem o tempo (em ms) durante o qual os monstros
// terá seu 'AI' ativo depois que todos os jogadores deixarem sua vizinhança.
mob_active_time: 0
boss_active_time: 0

// Ajuste do intervalo de visão de Mobs e Pets (coluna range2 no mob_db) (Nota 2)
view_range_rate: 100

// Chase Range é a base mínima de perseguição que um mob desiste antes de desistir
// (desde que o alvo esteja fora de seu campo de visão). Este é o intervalo 3
// coluna no mob_db. (Nota 2)
chase_range_rate: 100

// Qual nível de Olho de Abutre e Olho de Cobra os monstros deveriam ter aprendido?
// Oficialmente, os monstros não têm essas habilidades aprendidas, então suas habilidades de longo alcance
// só tem um intervalo de 9. Se você colocar um número maior que 0, o intervalo será
// ser aumentado por esse número.
monster_eye_range_bonus: 0

// Permitir que os monstros sejam agressivos e ataquem primeiro? (Nota 1)
monster_active_enable: yes

// Os nomes mob_db devem substituir os nomes mob especificados nos arquivos de spawn?
// 0: Não
// 1: sempre use a coluna Nome mob_db (nome mob em inglês)
// 2: sempre use a coluna mob_db JName (nome original do Kro mob)
override_mob_names: 0

// Taxa de atraso de dano do monstro (Nota 1)
// Definir como não / 0 é como sempre durou.
monster_damage_delay_rate: 100

// Roubando ações de monstros.
// 0 = O monstro consumirá o item.
// 1 = O monstro não consumirá o item.
monster_loot_type: 0

// Como o monstro busca itens de chão para saquear?
// 0: Mais próximo (antigo estilo Atenas)
// 1: Mais antigo na faixa (oficial)
monster_loot_search_type: 1

// Chance de mob lançar uma habilidade (Nota 2)
// Taxas mais altas levam a 100% do uso de habilidades do mob com nenhum / poucos ataques normais.
// Defina como 0 para desativar as habilidades do mob.
mob_skill_rate: 100

// Ajuste de atraso de habilidade do Mob (Nota 2)
// Depois que um mob lançou uma habilidade, há um atraso antes de ser capaz de
// refazê-lo. Observe que as habilidades com um atraso de 0 não podem ser afetadas por isso
// configuração.
mob_skill_delay: 100

// Taxa de monstros em um mapa, 200 seria o dobro do normal. (Nota 2)
mob_count_rate: 100

// Taxa de reaparecimento de monstros em um mapa. 50 faria os mobs reaparecerem duas vezes mais rápido (tempo de retardo parcial) (Nota 2)
// Nota: Isso não afeta os mobs com respawn imediato (a maioria dos mobs normais)
mob_spawn_delay: 100
plant_spawn_delay: 100
boss_spawn_delay: 100

// Os mobs não deveriam aparecer dentro do alcance de visão dos jogadores?
// 0 está desabilitado, caso contrário, é o número de tentativas antes de desistir
// e gerando o mob dentro da visualização do jogador de qualquer maneira, a menos que max (100) seja usado,
// nesse caso, o mob não será gerado e será tentado novamente em
// 5 segundos.
// NOTA: Isso não tem efeito em mobs que sempre geram na mesma célula
// (como ovos de formiga) exceto se você definir para o máximo.
no_spawn_on_player: 0

// Devem as coordenadas de spawn nos arquivos de spawn mob ser ignoradas? (Nota 1)
// Se definido como sim, todos os monstros terão um local de respawn aleatório em todo o
// mapeia independentemente do que o arquivo mob-spawn diz.
force_random_spawn: no

// Os escravos invocados herdam as características passivas / agressivas de seu mestre?
// 0: Não, retém o modo original.
// 1: Os escravos são sempre agressivos.
// 2: os escravos são sempre passivos.
// 3: Igual ao estado agressivo / passivo do mestre.
// 4: Modo é substituído pelo modo escravo (oficial)
slaves_inherit_mode: 4

// Os escravos convocados têm a mesma velocidade de caminhada que seu mestre?
// NOTA: O padrão é 3 para servidores oficiais.
// 0: Nunca.
// 1: Se o mestre pode andar
// 2: Se o mestre não pode andar (mesmo os mobs imóveis têm uma velocidade
// entrada em seu mob_db)
// 3: Sempre
slaves_inherit_speed: 3

// O ataque de monstros convocados (alquimistas ou @ monstros convocados) causará um
// chance de ativar as cartas de feitiço automático do mestre? (Nota 1)
summons_trigger_autospells: yes

// Quando um mob é atacado por outro monstro, o mob retaliará contra o mestre do tal mob em vez de contra o próprio mob?
// NOTA: mobs invocados são adquiridos via @summon e invocados por Alquimistas
retaliate_to_master: yes

// Se os mobs devem mudar de alvo temporariamente quando uma habilidade desencadeia uma habilidade de counter mob (Nota 1)
// ex: Mob ataca o jogador B, e o jogador A conjura uma habilidade C. Se definido como sim e o
// mob tem uma habilidade que é desencadeada pela habilidade C, então A será o alvo de
// a habilidade, caso contrário, B será direcionado pela habilidade de reação.
mob_changetarget_byskill: no

// Se a classe do monstro for alterada, ele recuperará totalmente o HP? (Nota 1)
monster_class_change_full_recover: yes

// Mostra alguma informação sobre o mob ao lado do nome? (adicione conforme necessário)
// (não funciona com guardião ou Emperium)
// 1: Display mob HP (formato Hp/MaxHp)
// 2: Display mob HP (porcentagem do formato full life)
// 4: Exibir o nível do mob
show_mob_info: 0

// Zeny dos mobs
zeny_from_mobs: no

// Monstros sobem de nível (os monstros sobem de nível cada vez que um jogador é morto e ficam mais fortes)
// A taxa de experiência é calculada ((nível do monstro - nível do monstro original) * (exp * (taxa de expansão_mobs_up_exp / 100)))
// NOTA: Não se aplica a Guardiões WoE.
mobs_level_up: no
mobs_level_up_exp_rate: 1

// Opções de Dynamic Mobs
// Usar mobs dinâmicos? (recomendado para servidores de pequeno e médio porte)
dynamic_mobs: yes

// Remova Mobs mesmo se eles estiverem feridos
mob_remove_damaged: yes

// Atrase antes de remover mobs de mapas vazios (padrão 5 min = 300 segundos)
mob_remove_delay: 300000

// Define em quem o mob npc_event é executado quando um mob é morto.
// Tipo 1: no jogador que matou o mob (se morto por um não-jogador, recorre ao tipo 0)
// Tipo 0: No jogador que causou mais danos ao mob.
// NOTA: Isso afeta quem ganha o Castelo quando o Emperium é quebrado. 
mob_npc_event_type: 1

// Tempo em milissegundos para ativar a proteção contra Kill Steal
// Defina como 0 para desativá-lo.
// Se isso for ativado e um jogador estiver usando @noks, dano de outros jogadores (KS) que não estão no grupo
// será reduzido a 0.
ksprotection: 0

// Os escravos MVP devem manter seu alvo quando convocados de volta ao mestre?
mob_slave_keep_target: yes

// Se deve ou não gerar a tumba mvp.
// Veja http://irowiki.org/wiki/MVP#Gravestone
mvp_tomb_enabled: yes

// Atraso antes que a tumba MVP seja gerada.
// Padrão: 9 segundos
mvp_tomb_delay: 9000

// Se o tamanho dos mobs especialmente convocados influencia a experiência, taxas de queda,
// e estatísticas. As taxas serão dobradas para grandes mobs e reduzidas à metade para os pequenos.
// Isso só é invocado sob o comando 'monster', @monsterbig e @monstersmall. (Nota 1)
// Padrão: no
mob_size_influence: no

// Como um monstro deve ser preso por uma parede de gelo lançada diretamente sobre ele?
// Em servidores oficiais, os monstros só podem deixar uma parede de gelo a oeste e sul. Se o alvo deles for norte ou leste de
// eles vão tentar persegui-lo continuamente, mas não conseguem. Isso os coloca em um ciclo durante o qual eles usarão
// habilidades ociosas e de perseguição. Monstros chefes, por outro lado, se comportarão como um monstro preso, não se movam e usarão
// habilidades ociosas e rudeattacked (quando atacado).
// 0: O monstro não ficará preso na parede de gelo.
// 1: O monstro se comportará como um monstro preso.
// 2-255: Número de loops que um monstro passará pelo comportamento descrito acima antes de se libertar da parede de gelo.
// NOTA: Em alguns servidores, monstros normais podem se libertar após 15-35 segundos dependendo de sua velocidade. Em outro
// servidores, eles ficarão presos dentro do firewall até que expire. Além disso, muitos servidores oficiais (por exemplo, iRO) têm casting
// icewall completamente bloqueado em todos os mapas que contêm monstros chefes.
// Padrão (menos explorável): mob - 75, boss - 0
// Padrão (mais oficial): mob - 220, boss - 1
mob_icewall_walk_block: 75
boss_icewall_walk_block: 0

// As barras de HP devem ser mostradas para monstros?
// 2012-04-04aRagexeRE ou cliente superior necessário.
monster_hp_bars_info: yes

// Deve um monstro reaparecer e um aviso impresso no servidor de mapa quando um monstro não consegue se mover por um longo tempo?
// Esta pode ser uma jogabilidade legítima (por exemplo, jogadores mantendo um MVP preso dentro do firewall), mas se você quiser evitar qualquer
// exploits e seja notificado sobre eles, você pode definir isso como sim.
monster_stuck_warning: no

// Taxa em que os monstros usam suas habilidades ociosas quando não há jogadores por perto (Nota 2)
// Em servidores oficiais, os monstros usam suas habilidades ociosas se forem avistados uma vez, mesmo que não haja mais jogadores por perto.
// Em servidores de pequeno e médio porte, isso pode fazer com que todos os monstros como ovos e Fabre / Pupa se metamorfoseiem.
// Para desligá-lo, defina-o como 0.
mob_nopc_idleskill_rate: 100
boss_nopc_idleskill_rate: 100

// Taxa de movimento dos monstros quando não há jogadores por perto (Nota 2)
// Nos servidores oficiais, os monstros sempre se movem se forem avistados uma vez, mesmo que não haja mais jogadores por perto.
// Para desligá-lo, defina-o como 0.
mob_nopc_move_rate: 100
boss_nopc_move_rate: 100

// Ao matar um monstro, as conquistas do tipo AG_BATTLE são acionadas para todos no mesmo grupo dentro da área?
// A área é limitada à configuração de batalha area_size.
achievement_mob_share: no

// Os escravos deveriam se teletransportar de volta para seu mestre se eles chegarem muito longe durante a perseguição? (Nota 1)
// Padrão (oficial): no
slave_stick_with_master: no
