//--------------------------------------------------------------
// rAthenaBR - Configuração de Batalha
// Traduzido originalmente por Guru
//--------------------------------------------------------------
// Observação 1: o valor é uma chave de configuração (on/off, yes/no ou 1/0)
// Nota 2: o valor está em porcentagens (100 significa 100%)
// Nota 3: O valor é um campo de bits. Se nenhuma descrição for fornecida,
// assume tipos de unidade (1: Pc, 2: Mob, 4: Animal de estimação, 8: Homun, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// Quem deve ter um valor baseatk (faz str afetar o dano)? (Nota 3)
enable_baseatk: 0x9
enable_baseatk_renewal: 0x29F

// Quem pode fugir perfeitamente? (Nota 3)
enable_perfect_flee: 1

// Quem pode ter ataques críticos? (Nota 3)
// (Observe que existem algumas habilidades que sempre dão um acerto crítico, independentemente disso)
enable_critical: 17

// Taxa de ajuste crítica para não jogadores (Nota 2)
mob_critical_rate: 100
critical_rate: 100


// Ataques normais devem atrasar a caminhada? (Nota 3)
// Se não, os personagens podem se mover assim que começarem um ataque (animação de ataque
// ou a animação de caminhada pode ser omitida do lado do cliente, causando ataques cortados ou
// monstros que se teletransportam para você)
// Caso contrário, o atraso é igual à 'animação de ataque' (amotion)
attack_walk_delay: 15

// Ajuste de atraso de movimento após ser atingido. (Nota 2)
// O atraso 'não pode andar' após ser atingido é calculado como uma porcentagem da duração da animação de dano.
// NOTA: Afeta apenas o atraso normal de um único ataque, não o atraso adicionado pela opção multihit_delay abaixo.
pc_damage_walk_delay_rate: 20
damage_walk_delay_rate: 100

// Ajuste de atraso de movimento para ataques multi-hit.
// Quando atingidos por uma habilidade multi-hit como Lord of Vermillion ou Jupitel Thunder, os personagens serão
// incapaz de se mover por mais milissegundos "(número de acessos -1) * multihit_delay".
// 80 é a configuração que parece Aegis (vs Sonic Blows)
// 230 é a configuração que faz o walkdelay durar até o último hit (vs Jupitel thunder)
multihit_delay: 80

// Taxa de atraso danificada para jogadores (Nota 2)
// (Definir como não / 0 será como sempre resistir)
player_damage_delay_rate: 100

// Deve raça ou elemento ser usado para considerar alguém morto-vivo?
// 0 = elemento morto-vivo
// 1 = correr com mortos-vivos
// 2 = ambos (qualquer um funciona)
undead_detect_type: 0

// O HP se recupera se for atingida por um atributo igual ao seu? (Nota 1)
attribute_recover: no

// Qual é a taxa de bits mínima e máxima de ataques normais?
min_hitrate: 5
max_hitrate: 100

// Tipo de penalidade que é aplicada a FLEE quando mais de agi_penalty_count monstros estão atacando o jogador
// 0 = nenhuma penalidade é aplicada
// 1 = agi_penalty_num é reduzido de FLEE como um%
// 2 = agi_penalty_num é reduzido de FLEE como uma quantidade exata
agi_penalty_type: 1

// Quando a penalidade agi está ativada, a quem ela deve ser aplicada? (Nota 3)
// Por padrão, apenas os jogadores recebem a penalidade.
agi_penalty_target: 1

// Quantidade de inimigos necessários para atingir o jogador antes que FLEE comece a ser penalizado
agi_penalty_count: 3

// Quantidade de FLEE penalizada por cada monstro atacante mais do que agi_penalty_count
agi_penalty_num: 10

// Tipo de penalidade que é aplicada ao equipamento e à DEF de vit quando mais de vit_penalty_count monstros estão atacando o jogador
// 0 = nenhuma penalidade é aplicada
// 1 = vit_penalty_num é reduzido de DEF como um%
// 2 = vit_penalty_num é reduzido de DEF como um valor exato
vit_penalty_type: 1

// Quando a penalidade vit está habilitada, a quem ela deve ser aplicada? (Nota 3)
// Por padrão, apenas os jogadores recebem a penalidade.
vit_penalty_target: 1

// Quantidade de inimigos necessários para atingir o jogador antes que a defesa comece a ser penalizada
vit_penalty_count: 3

// Quantidade de defesa VIT penalizada por cada monstro atacante mais do que vit_penalty_count
vit_penalty_num: 5

// Use um método alternativo de cálculo DEF para ataques físicos.
// Com 0, desabilitado (usar redução de% de def normal com redução adicional de def2)
// Em 1 ou mais defesa é a subtração de (valor DEF *).
// por exemplo: 10 + 50 def torna-se 0 + (10 * tipo + 50)
weapon_defense_type: 0

// MDEF ‚igual ao anterior. (Valor MDEF *)
magic_defense_type: 0

// Mudar a direção do atacante para enfrentar o oponente em cada ataque? (Nota 3)
// NOTA: Em servidores oficiais, o recuo de algumas habilidades como Firewall é sempre baseado na
// última direção percorrida. Mesmo quando atacando em uma direção completamente diferente, 
// a direção do knockback não muda, por exemplo se você andar para o norte e, em seguida, atacar um inimigo
// ao sul, você ainda será empurrado de volta para o sul pelo Firewall. Monstros imóveis
// sempre será empurrado de volta para o sul, já que sua direção padrão é o norte.
attack_direction_change: 0

// Para aqueles que estão definidos, seu elemento de ataque inato "não é elementar"
// (100% versus em todos os elementos de defesa) (Nota 3)
// OBSERVAÇÃO: esta é a configuração que o torna para que os não jogadores possam atingir o máximo
// dano contra alvos do tipo Fantasma com ataques normais (por exemplo: vs. Ghostring).
attack_attr_none: 14

// Taxa na qual o equipamento pode quebrar (taxa básica antes de ser modificado por qualquer habilidade)
// 1 = chance de 0,01%. Padrão para servidores oficiais: 0
equip_natural_break_rate: 0

// Taxa geral de que seu próprio equipamento pode quebrar. (Nota 2)
// Esta taxa afeta a taxa de quebra de penalidade de habilidades como impulso de força e sua taxa de quebra natural
// (de equip_natural_break_rate). Se a habilidade de dotação de um Sábio falhar e for acima de 0, o personagem selecionado
// arma será quebrada.
equip_self_break_rate: 100

// Taxa geral na qual você pode quebrar o equipamento do alvo. (Nota 2)
// Isso afeta o comportamento de habilidades como terror ácido e colapso
equip_skill_break_rate: 100

// Os ataques com armas têm um atraso na velocidade de ataque antes que o dano real seja aplicado? (Nota 1)
// NOTA: A configuração oficial é sim, embora degrada um pouco o desempenho.
delay_battle_damage: yes

// As flechas / munição são consumidas quando usadas em um arco / arma?
// 0 = Não
// 1 = sim
// 2 = sim, mesmo para habilidades que não especificam o consumo de flecha quando dito
//     habilidade é baseada em armas e usada com armas de longo alcance (auto-suposições que
//     habilidades devem consumir munição quando forem adquiridas por meio de um cartão ou plagiar)
arrow_decrement: 1

// A munição deve ser desequipada ao desequipar uma arma?
// O comportamento oficial é "yes".
ammo_unequip: yes

// Deve uma arma adequada ser equipada ao equipar munição?
// O comportamento oficial é "yes".
ammo_check_weapon: yes

// O bônus de script de item 'Autospell' deve verificar a distância / obstáculos antes de lançar?
// O comportamento oficial é "no", defini-lo como "yes" fará com que as habilidades usem suas
// alcance. Por exemplo, Sonic Blow requer uma distância de 2 células antes de permitir o autocast.
// Esta configuração também afeta o autospellwhenhit.
autospell_check_range: no

// Se o atacante e o alvo estiverem no mesmo ladrilho, o alvo deve ser empurrado de volta para a esquerda?
// O comportamento oficial é "yes", definir como "no" empurrará o alvo para trás do atacante.
knockback_left: yes

// Os jogadores podem usar Falcons e Wargs ao mesmo tempo? (Nota 1)
// Isso não é permitido em servidores oficiais.
warg_can_falcon: no

// O alvo deve ser capaz de se esquivar dos danos disparando para a borda da tela?
// O comportamento oficial é "no"
snap_dodge: no
