//--------------------------------------------------------------
// rAthenaBR - Configuração dos Campos de Batalha
// Traduzido originalmente por Guru
//--------------------------------------------------------------
// Observação 1: o valor é uma chave de configuração (on/off, yes/no ou 1/0)
// Nota 2: o valor está em porcentagens (100 significa 100%)
// Nota 3: O valor é um campo de bits. Se nenhuma descrição for fornecida,
// assume tipos de unidade (1: Pc, 2: Mob, 4: Animal de estimação, 8: Homun, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// Taxa máxima de HP dos jogadores? (O padrão é 100)
hp_rate: 100

// Taxa máxima de SP dos jogadores? (O padrão é 100)
sp_rate: 100

// Se as cartas e atributos da mão esquerda são ou não aplicados ao ataque da mão direita (Nota 1)
// (é 'yes' nos servidores oficiais)
left_cardfix_to_right: yes

// A quantidade de HP com que um jogador irá reaparecer, 0 é o padrão.
// (A unidade está em porcentagem do HP total, 100 é a cura total do HP, 0 é reaparecido com o total de 1HP.)
restart_hp_rate: 0

// A quantidade de SP com que um jogador irá reaparecer, 0 é o padrão.
// (Unidade está em porcentagem do SP total, 100 é a cura total do SP, 0 é reaparecido com 1 SP total.)
restart_sp_rate: 0

// Um ​​jogador normal pode contornar a árvore de habilidades? (Nota 1)
player_skillfree: no

// Quando definido como sim, força os pontos de habilidade ganhos na 1ª classe a serem colocados na 1ª classe
// habilidades, e força os pontos de habilidade do novato a serem colocados na habilidade básica. (Nota 1)
player_skillup_limit: yes

// As habilidades da missão podem ser aprendidas? (Nota 1)
// Definir como sim pode abrir um exploit no seu servidor!
quest_skill_learn: no

// Quando as habilidades são reiniciadas, as habilidades da missão também são reiniciadas? (Nota 1)
// Definir como sim pode abrir um exploit no seu servidor!
// NOTA: Se você tiver quest_skill_learn definido como yes, as habilidades de quest são sempre reiniciadas.
quest_skill_reset: no

// Você deve ter habilidades básicas para sentar, negociar, formar um grupo ou criar uma sala de bate-papo? (Nota 1)
basic_skill_check: yes

// Ao se teletransportar ou gerar um mapa, quanto tempo antes que um monstro o veja se você não se mover? (o tempo está em milissegundos)
// Isto é, quando você vai para um mapa e não se move, quanto tempo até os monstros notarem você.
// Se você atacar um monstro, ele o atacará de volta independentemente desta configuração.
player_invincible_time: 5000

// O intervalo de tempo para a HP restaurar naturalmente. (em milissegundos)
natural_healhp_interval: 6000

// O intervalo de tempo para que o SP seja restaurado naturalmente. (em milissegundos)
natural_healsp_interval: 8000

// Intervalo de tempo da habilidade de cura automática. (em milissegundos)
natural_heal_skill_interval: 10000

// O peso máximo para um personagem carregar quando ele para de curar naturalmente. (no %)
// Para renovação: Requer cliente 20171025 ou mais recente para exibir corretamente
natural_heal_weight_rate: 50
natural_heal_weight_rate_renewal: 70

// Velocidade máxima de atk. (Padrão 190, máximo permitido 199)
max_aspd: 190

// O mesmo que max_aspd, mas para as 3ª classes. (Padrão 193, máximo permitido 199)
max_third_aspd: 193

// Max ASPD para classe estendida (Kagerou/Oboro e Rebellion). (Padrão 193, máximo permitido 199)
max_extended_aspd: 193

// Taxa de velocidade máxima de caminhada (200 seria limitado ao dobro da velocidade normal)
max_walk_speed: 300

// Máximo de HPs dependendo do nível básico. Os valores padrão são:
// Lv 99: 330000
// Lv150: 660000
// Lv175: 1100000
max_hp_lv99: 330000
max_hp_lv150: 660000
max_hp: 1100000

// SP máximo. (O padrão é 1000000)
max_sp: 1000000

// Máximo de parâmetros / estatísticas para cada classe. (str, agi, vit, int, dex e luk)
// 'max_parameter' para classes iniciantes, não trans, não bebês e não terceiras
// 'max_trans_parameter' para classes trans (classes não terceiras)
// 'max_third_parameter' para 3ª classe (regular/não trans), exceto bebê 3ª classe
// 'max_third_trans_parameter' para as 3ª classes de transações
// 'max_baby_parameter' para aulas de bebês, exceto 3ª classes de bebês
// 'max_baby_third_parameter' somente para bebês da 3ª classe
// 'max_extended_parameter' para 2ª classe estendida (Kagerou / Oboro e Rebelião)
// Para opções mais específicas/avançadas, consulte 'db/[pre-] re/job_params_db.txt'
max_parameter: 99
max_trans_parameter: 99
max_third_parameter: 130
max_third_trans_parameter: 130
max_baby_parameter: 80
max_baby_third_parameter: 117
max_extended_parameter: 125
max_summoner_parameter: 120

// Bônus de pontos de status para classe transcendente
transcendent_status_points: 52

// Max armor def/mdef
// NOTA: Esta configuração não tem efeito se o servidor for executado no modo de renovação (RENOVAÇÃO)
// NOTA: não afeta as habilidades e efeitos de status como Força Mental
// Se weapon_defense_type for diferente de zero, não se aplicará a max def.
// Se magic_defense_type for diferente de zero, não se aplicará a max mdef.
max_def: 99

// Bônus de conversão Def para Def2. Se a armadura def/mdef exceder max_def,
// o restante é convertido em vit def/int mdef usando este multiplicador
// (por exemplo: se definido como 10, cada ponto de armadura acima do máximo torna-se 10 pontos de defesa vit)
over_def_bonus: 0

// Os carrinhos de peso máximo podem suportar.
max_cart_weight: 8000

// Impedir o logout de jogadores após serem atingidos por quanto tempo (em ms, 0 desativa)?
prevent_logout: 10000

// Quando o servidor deve impedir que um jogador saia? Não terá efeito se prevent_logout estiver desabilitado. (Nota 3)
// Os servidores oficiais evitam que os jogadores se desconectem após atacar, lançar habilidades e receber danos.
// 0 = Os jogadores sempre podem sair
// 1 = Impedir logout no login
// 2 = Impedir o logout após o ataque
// 4 = Impedir o logout após lançar a habilidade
// 8 = Impedir o logout após ser atingido
prevent_logout_trigger: 14

// Exibir os valores de hp / sp drenados de ataques normais? (Por exemplo: cartão Hunter Fly)
show_hp_sp_drain: no

// Exibir os valores de hp/sp ganhos por matar mobs? (Por exemplo: carta Sky Deleter)
show_hp_sp_gain: yes

// Se definido, quando A aceita B como amigo, B também será adicionado ao amigo de A
// lista, caso contrário, apenas A aparece na lista de amigos de B.
// NOTA: esta configuração permite a adição e exclusão automática de amigos.
friend_auto_add: yes

// As solicitações simultâneas de convite de troca/grupo/guilda são rejeitadas automaticamente?
invite_request_check: yes

// Os jogadores vão deixar cair um 'Crânio' quando mortos?
// Nota: O item 'Crânio' (ID 7420) é restrito ao comércio por padrão. por favor, verifique
// o banco de dados item_trade para ajustar de acordo.
// 0 = Desativado
// 1 = Caiu apenas em mapas PvP
// 2 = Caiu em todas as situações
bone_drop: 0

// Os caracteres montados (no Peco) aumentam de tamanho?
// 0 = não
// 1 = apenas as classes normais no Peco têm tamanho grande
// 2 = apenas as classes de bebês no Peco têm tamanho médio
// 3 = ambas as classes normais no Peco têm tamanho grande
// e as classes baby no Peco têm tamanho médio
character_size: 0

// Personagens inativos podem receber autoloot?
// Defina o tempo em segundos em que um personagem inativo irá parar de receber
// itens do Autoloot (0: desativado).
idle_no_autoloot: 0

// Distância mínima que uma sala de vendas / chat deve estar de um NPC para ser colocada.
// Padrão: 3 (0: desabilitado).
min_npc_vendchat_distance: 3
 
// Quanto as montarias alugadas devem aumentar a velocidade de movimento de um jogador?
// O padrão é 25. 100 = 100% de aumento.
rental_mount_speed_boost: 25

// =========================================
// sistema VIP
// =========================================
// Aumento do slot de armazenamento. Definir como 0 será desativado.
// Fornece mais slots de armazenamento acima do limite MIN_STORAGE.
// Observação: MIN_STORAGE + vip_storage_increase não pode exceder MAX_STORAGE.
// Padrão: 300
vip_storage_increase: 300

// Aumento da taxa de experiência básica. Definir como 0 será desativado. (Nota 2)
// Padrão: 50
vip_base_exp_increase: 50

// Aumento da taxa de experiência de trabalho. Definir como 0 será desativado. (Nota 2)
// Padrão: 50
vip_job_exp_increase: 50

// Multiplicador de taxa de penalidade de experiência para contas VIP.
// Padrão: 100 (100 = penalidade de 1%)
vip_exp_penalty_base: 100
vip_exp_penalty_job: 100

// Penalidade Zeny para contas VIP.
// A perda do Zeny só acontece se o jogador morrer de outro jogador.
// Padrão: 0 (100 = penalidade de 1%)
vip_zeny_penalty: 0

// Aumento de experiência no Manual de Batalha. Definir como 0 será desativado.
// - Manual de batalha regular/espesso: 50+ (50 / X) = 75%
// - Manual de batalha HE: 100+ (100 / X) = 150%
// - Manual de Batalha x3: 200+ (200 / X) = 300%
// Nota: X é o valor de configuração.
// Padrão: 2
vip_bm_increase: 2

// Aumento da queda do item. Definir como 0 será desativado.
// Nota: 50 = 50% de aumento item_drop.
// Para item_rate = 200: 200 * 50/100 = 100 taxa de bônus adicionada à base 200 dando taxa total de 300.
// Padrão: 50
vip_drop_increase: 50

// Requisito de gemas.
// O Grupo VIP pode ignorar o requisito de Gemstone para habilidades?
// 0 = Desativar
// 1 = Comporte-se como cartão de amante
// 2 = Remover todos os requisitos de gemstone (padrão)
vip_gemstone: 2

// Exibirá informações de taxa (mensagem de EXP, queda e penalidade de morte)? (Nota 1)
vip_disp_rate: yes

// Revive o jogador morto durante o warping? (Nota 1)
revive_onwarp: yes

// Nível mínimo de base para receber bônus do Taekwon Ranker
// - 3x HP e SP máximos
// - Todas as habilidades de Taekwon
taekwon_ranker_min_lv: 90

// Pontos de fama ganhos
// Missão Taekwon concluída
fame_taekwon_mission: 1
// Arma forjada própria refinada para +10
fame_refine_lv1: 1
fame_refine_lv2: 25
fame_refine_lv3: 1000
// Sucesso em forjar uma arma lv3 com 3 ingredientes adicionais
fame_forge: 10
// Refina o limite para dar ponto para refinar a arma forjada para +10
blacksmith_fame_refine_threshold: 10
// Sucesso ao preparar 'n' Poções Condensadas em sequência
fame_pharmacy_3: 1
fame_pharmacy_5: 3
fame_pharmacy_7: 10
fame_pharmacy_10: 50

// Como o servidor deve medir o tempo ocioso do personagem? (Nota 3)
// 0x0001 - Solicitação de caminhada
// 0x0002 - Solicitação UseSkillToID (tentativa de uso de habilidade direcionada)
// 0x0004 - Solicitação UseSkillToPos (tentativa de uso de habilidade AoE)
// 0x0008 - Solicitação de UseItem (Incluindo equipar / desequipar)
// 0x0010 - Pedido de Ataque
// 0x0020 - Solicitação de bate-papo (sussurro, grupo, guilda, campos de batalha, etc)
// 0x0040 - Solicitação de sentar / ficar em pé
// 0x0080 - Solicitação de emoção
// 0x0100 - Solicitação DropItem
// 0x0200 - @ / # Pedido de Comando
// 0x0400 - Fechando uma janela NPC
// 0x0800 - Fornecendo entrada para um NPC
// 0x1000 - Escolhendo uma opção de menu NPC
// 0x2000 - Clicando no próximo botão de um NPC
// 0x4000 - Terminando para uma barra de progresso NPC
// Observe que pelo menos 1 opção deve ser habilitada.
// Esteja ciente de que quanto mais opções usadas, mais fácil se torna burlar recursos que dependem de idletime (por exemplo, checkidle ()).
// Padrão: walk (0x1) + useskilltoid (0x2) + useskilltopos (0x4) + useitem (0x8) + attack (0x10) + any npcinteraction (0x400,0x800,0x1000,0x2000,0x4000) = 0x7C1F
idletime_option: 0x7C1F

// Ajuste os traços especiais da classe invocador.
// - Invocadores pertencem à categoria de raça bruta. Eles têm sua própria raça RC_PLAYER_DORAM (11) para ser diferenciada da raça de monstros RC_BRUTE (2).
// - Invocadores são de tamanho pequeno (0) em vez de médio (1)
summoner_race: 11
summoner_size: 0
