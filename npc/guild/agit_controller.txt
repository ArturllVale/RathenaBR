// ===== rAthena Script ========================================
// = Guerra do Emperium - Auto-Start
// ===== Por: ========================================== =========
// = kalen (1.0)
// = 1,1 por Akaru e ho | yAnge |
// ===== Traduzido Por: ========================================== =========
// = Guru
// ===== Versão Atual: ========================================
// = 2.0
// ===== Compatível com: ========================================
// = Projeto rAthena; RO Episódio 4+
// ===== Descrição: ==========================================
// = Auto-start para War of Emperium FE.
// = Para obter instruções, consulte doc / woe_time_explanation.txt.
// ===== Comentários adicionais: ==================================
// = 1.1a mudou OnInit para OnAgitInit. [Kobra_k88]
// = 1.2 adicionadas verificações de gettime. removeu $ AgitStarted var. [kobra_k88]
// = 1.3 Tempo de geração de tesouro movido aqui. [Kobra_k88]
// = 1.3a Implementada a ideia de Shadowlady para permitir diferentes
// = horários de início / parada em dias diferentes. [kobra_k88]
// = 1.4 Corrigido o surgimento de baús de tesouro! Tivemos que desenrolar alguns loops
// = Agora eles aparecem em castelos de 00:01 a 00:24. [Lúpus]
// = 1.5 Mensagens finais WOE corrigidas em dias não WOE, por Avaj
// = 1.5a guias ausentes [KarLaeda]
// = 1.6 Vários anúncios corrigidos de "WoE começou" [ultramage]
// = 1.7 Comentou os anúncios de início e fim do WoE. [L0ne_W0lf]
// = 1.8 Proprietários de castelos exibidos quando o WoE começa e termina. [L0ne_W0lf]
// = 1.8a Agora relatará castelos desocupados no início / fim. [L0ne_W0lf]
// = 1.8b Opa. Corrigido um erro: D [L0ne_W0lf]
// = 1.9 Reorganizou as verificações de tempo para que não usem mais goto. [L0ne_W0lf]
// = Removidas chamadas de função de geração de tesouro. (Não é mais necessário)
// = 2.0 Adicionado suporte WoE Battle Log para broadcasts. [L0ne_W0lf]
//============================================================

-	script	Agit_Event	-1,{
	end;

OnClock2100:	//Hora de início para terça e quinta-feira
OnClock2300:	//Hora final para terça e quinta-feira
OnClock1600:	//Hora de início para sábado
OnClock1800:	//Hora final para sábado

OnAgitInit:
	// Verificações de tempo inicial
	if((gettime(DT_DAYOFWEEK)==TUESDAY) && (gettime(DT_HOUR)>=21 && gettime(DT_HOUR)<23) ||
	   (gettime(DT_DAYOFWEEK)==THURSDAY) && (gettime(DT_HOUR)>=21 && gettime(DT_HOUR)<23) ||
	   (gettime(DT_DAYOFWEEK)==SATURDAY) && (gettime(DT_HOUR)>=16 && gettime(DT_HOUR)<18)) {
		if (!agitcheck()) {
			AgitStart;
			callsub S_DisplayOwners;
		}
		end;
	}

	// Verificações de tempo final
	if ((gettime(DT_DAYOFWEEK)==TUESDAY) && (gettime(DT_HOUR)==23) ||
	    (gettime(DT_DAYOFWEEK)==THURSDAY) && (gettime(DT_HOUR)==23) ||
	    (gettime(DT_DAYOFWEEK)==SATURDAY) && (gettime(DT_HOUR)==18)) { 
		if (agitcheck()) {
			AgitEnd;
			callsub S_DisplayOwners;
		}
		end;
	}
	end;

S_DisplayOwners:
	setarray .@maps$[0],"aldeg_cas01","aldeg_cas02","aldeg_cas03","aldeg_cas04","aldeg_cas05";
	setarray .@maps$[5],"gefg_cas01","gefg_cas02","gefg_cas03","gefg_cas04","gefg_cas05";
	setarray .@maps$[10],"payg_cas01","payg_cas02","payg_cas03","payg_cas04","payg_cas05";
	setarray .@maps$[15],"prtg_cas01","prtg_cas02","prtg_cas03","prtg_cas04","prtg_cas05";
	for( set .@i, 0; .@i <= 19; set .@i, .@i+1 ) {
		if (GetCastleData(.@maps$[.@i],1)) {
			Announce "O Castelo de [" + GetCastleName(.@maps$[.@i]) + "] foi conquistado pelo Clã [" + GetGuildName(GetCastleData(.@maps$[.@i],1)) + "].",bc_all|bc_woe;
		}
		else {
			Announce "o Castelo de [" + GetCastleName(.@maps$[.@i]) + "] está atualmente desocupado.",bc_all|bc_woe;
		}
	}
	end;
}
