// ===== Script rAthena ===========================================
// = Script do banqueiro
// ===== Por: =============================================== =========
// = Syrus22 (1.0)
// ===== Traduzido Por: =============================================== =========
// = Guru
// ===== Versão Atual: ===========================================
// = 2.0
// ===== Compatível com: =========================================
// = Projeto rAthena
// ===== Descrição: ===============================================
// = Um banqueiro de toda a conta para armazenar Zeny
// ===== Comentários adicionais: ===================================
// = Syrus22 - Há uma taxa de transação opcional no topo de
// = o script. Para usá-lo, basta alterar o primeiro comando definido
// = para definir a variável de custo como você deseja que a taxa seja.
// = Versão 2.0: Otimizado e trouxe o script até o padrão. [Jguy]
//============================================================ 

prontera,132,217,5	script	Banqueiro	109,{
	set @cost,500;
	mes "[Banqueiro]";
	mes "Bem-vind"+(Sex?"o":"a")+" ao Primeiro Banco de Prontera. Como posso te ajudar hoje?";
	next;
	switch(select("^336600Fazer um depósito^000000:^ffcc00Fazer um saque^000000:^990000Ver Saldo^000000:^333333Cancelar^000000")) {
	case 1:
		mes "[Banqueiro]";
		mes "Muito bem... Quanto você gostaria de depositar? O máximo que você pode depositar de uma vez é 999.999 Zeny.";
		next;
		if (@cost > 0) {
			mes "[Banqueiro]";
			mes "Ah, e perceba que há um taxa de " +@cost + " Zeny em todas as transações!";
			next;
		}
		input @deposit;
		if (@deposit < 1) {
			mes "Certifique-se de me pedir para depositar uma quantia real.";
			close;
		}
		else if (@deposit > Zeny) {
			mes "Parece que você não tem a quantidade de zeny que está tentando depositar!";
			close;
		}
		else if (@deposit > (Zeny - @cost)) {
			mes "Você precisa " + @cost + " Zeny para cobrir a taxa de transação!";
			close;
		}
		else {
			set Zeny,Zeny - @deposit;
			set Zeny,Zeny - @cost;
			set #bankstorage,#bankstorage + @deposit;
			mes "[Banqueiro]";
			mes "Muito obrigado... Seu zeny está em boas mãos.";
			close;
		}
	case 2:
		mes "[Banqueiro]";
		mes "Muito bem... Quanto você gostaria de sacar? O máximo que você pode sacar de uma vez é 999.999 Zeny";
		next;
		if (@cost > 0) {
			mes "[Banqueiro]";
			mes "Ah, e perceba que há um taxa de" +@cost + " Zeny em todas as transações!";
			next;
		}
		input @withdrawl;
		if (@withdrawl < 1) {
			mes "Por favor, não brinque. Preciso de uma quantia real para sacar.";
			close;
		}
		else if (@withdrawl > #bankstorage) {
			mes "Você tem ^00FF00" + callfunc("F_InsertComma",#bankstorage) +"^000000 zeny na sua conta!";
			close;
		}
		else if ((@cost > Zeny) && ((Zeny + @withdrawl) > @cost)) {
			mes "[Banqueiro]";
			mes "Você não tem o Zeny para a taxa de transação agora. Você gostaria que eu retirasse a taxa diretamente do seu saque?";
			next;
			switch(select("Sim, por favor:Não, obrigado")){
			case 1:
				mes "[Banqueiro]";
				mes "Removing " + @cost + " de sua retirada para cobrir a taxa de depósito...";
				set @withdrawl,@withdrawl - @cost;
				set #bankstorage,#bankstorage - @cost;
				set @cost,0;
				next;
				set Zeny,Zeny - @cost;
				set Zeny,Zeny + @withdrawl;
				set #bankstorage,#bankstorage - @withdrawl;
				mes "[Banqueiro]";
				mes "Aqui está o seu Zeny. Tenha um bom dia.";
				close;
			case 2:
				mes "[Banqueiro]";
				mes "Muito bem... volte logo.";
				close;
			}
		}
		else {
			set Zeny,Zeny - @cost;
			set Zeny,Zeny + @withdrawl;
			set #bankstorage,#bankstorage - @withdrawl;
			mes "[Banqueiro]";
			mes "Aqui está o seu Zeny. Tenha um bom dia.";
			close;
		}
	case 3:
		mes "[Banqueiro]";
		mes "Hmmmm... deixe-me verificar alguns papéis.";
		next;
		mes "*Rustle, Rustle*";
		next;
		mes "[Banqueiro]";
		mes "Você atualmente tem " + callfunc("F_InsertComma",#bankstorage) + " Zeny na sua conta.";
		close;
	case 4:
		mes "[Banqueiro]";
		mes "Muito bem... volte logo.";
		close;
	}
}
